<!DOCTYPE aesl-source>
<network>
<node nodeId="1" name="thymio-II"># variables for notes
var notes[6]
var durations[6]
var note_index = 6
var wave[142]
var i
var angle
var cos_result

# compute a sinus wave for sound
for i in 0:141 do
	angle = (i-70)*468
	call math.cos(cos_result, angle)
	wave[i] = cos_result/256
end
call sound.wave(wave)
call sound.system(-1)
call leds.top(0,0,0)
call leds.bottom.left(0,0,0)
call leds.bottom.right(0,0,0)
call leds.circle(0,0,0,0,0,0,0,0)

onevent sound.finished
	if note_index != 6 then
		call sound.freq(notes[note_index], durations[note_index])
		note_index += 1
	end

onevent buttons
	if button.forward == 1 then
		call math.copy(notes, [524, 524, 524, 262, 262, 262])
		call math.copy(durations, [15, 15, 15, 8, 8, 8])
		call sound.freq(notes[0], durations[0])
		note_index = 1
	end
	if button.backward == 1 then
		call math.copy(notes, [524, 262, 262, 262, 262, 262])
		call math.copy(durations, [15, 8, 8, 8, 8, 8])
		call sound.freq(notes[0], durations[0])
		note_index = 1
	end
<toolsPlugins>
<ThymioVisualProgramming>
<vplroot>
<settings advanced-mode="false" color-scheme="0"/>

<buttonset eb0="1" ab4="256" eb1="0" ab5="256" eb2="0" eb3="0" eb4="0" action-name="sound" event-name="button" state="-1" ab0="516" ab1="516" ab2="516" ab3="256"/>

<buttonset eb0="0" ab4="256" eb1="0" ab5="256" eb2="1" eb3="0" eb4="0" action-name="sound" event-name="button" state="-1" ab0="516" ab1="256" ab2="256" ab3="256"/>

<buttonset/>

</vplroot>
</ThymioVisualProgramming>
</toolsPlugins>
</node>
</network>
