<!DOCTYPE aesl-source>
<network>
<node nodeId="1" name="thymio-II"># variables for notes
var notes[6]
var durations[6]
var note_index = 6
var note_count = 6
var wave[142]
var i
var wave_phase
var wave_intensity

# compute a sinus wave for sound
for i in 0:141 do
	wave_phase = (i-70)*468
	call math.cos(wave_intensity, wave_phase)
	wave[i] = wave_intensity/256
end
call sound.wave(wave)
# reset outputs
call sound.system(-1)
call leds.top(0,0,0)
call leds.bottom.left(0,0,0)
call leds.bottom.right(0,0,0)
call leds.circle(0,0,0,0,0,0,0,0)

# when a note is finished, play the next note
onevent sound.finished
	if note_index != note_count then
		call sound.freq(notes[note_index], durations[note_index])
		note_index += 1
	end

onevent buttons
	when button.forward == 1 do
		call math.copy(notes[0:4], [440, 370, 0, 311, 370])
		call math.copy(durations[0:4], [14, 7, 14, 14, 7])
		note_index = 1
		note_count = 5
		call sound.freq(notes[0], durations[0])
	end
	when button.backward == 1 do
		call math.copy(notes[0:4], [311, 370, 0, 440, 370])
		call math.copy(durations[0:4], [7, 14, 14, 7, 14])
		note_index = 1
		note_count = 5
		call sound.freq(notes[0], durations[0])
	end
<toolsPlugins>
<ThymioVisualProgramming>
<vplroot xml-format-version="1">
<program advanced_mode="0">
<set>
<block value0="1" value1="0" value2="0" value3="0" value4="0" type="event" name="button"/>
<block value0="515" value1="258" value2="517" value3="513" value4="258" value5="517" type="action" name="sound"/>
</set>
<set>
<block value0="0" value1="0" value2="1" value3="0" value4="0" type="event" name="button"/>
<block value0="257" value1="514" value2="517" value3="259" value4="514" value5="517" type="action" name="sound"/>
</set>
<set/>
</program>
</vplroot>
</ThymioVisualProgramming>
</toolsPlugins>
</node>
</network>
